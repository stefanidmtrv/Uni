$version Generated by VerilatedVcd $end
$date Wed Nov 17 16:09:45 2021
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  8 - a_in [7:0] $end
  $var wire  8 . b_in [7:0] $end
  $var wire  1 + clk $end
  $var wire  3 / op_in [2:0] $end
  $var wire  8 0 q_out [7:0] $end
  $var wire  1 , rst $end
  $scope module top_tb $end
   $var wire  8 - a_in [7:0] $end
   $var wire  8 . b_in [7:0] $end
   $var wire  1 + clk $end
   $var wire  3 / op_in [2:0] $end
   $var wire  8 0 q_out [7:0] $end
   $var wire  1 , rst $end
   $scope module alu_inst $end
    $var wire  8 - a [7:0] $end
    $var wire  8 $ add [7:0] $end
    $var wire  8 & and1 [7:0] $end
    $var wire  8 . b [7:0] $end
    $var wire  1 + clk $end
    $var wire  3 / op [2:0] $end
    $var wire  8 ' or1 [7:0] $end
    $var wire  8 0 q [7:0] $end
    $var wire  1 , rst $end
    $var wire  8 - set [7:0] $end
    $var wire  8 * sl1 [7:0] $end
    $var wire  8 ) sr1 [7:0] $end
    $var wire  8 % sub [7:0] $end
    $var wire  8 ( unchanged [7:0] $end
    $var wire  8 ( w [7:0] $end
    $var wire  8 # w_new [7:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b01001010 #
b00000011 $
b01000111 %
b00000100 &
b11111111 '
b00100101 (
b00010010 )
b01001010 *
1+
0,
b11011110 -
b10010001 .
b011 /
b01001010 0
#2
0+
1,
#3
b00000000 #
b11011110 $
b00100010 %
b00000000 &
b11011110 '
b00000000 (
b00000000 )
b00000000 *
1+
b00000000 0
#4
0+
#5
1+
#6
0+
#7
1+
#8
0+
#9
1+
#10
b00001010 #
b00001010 $
b11110110 %
b00001010 '
0+
0,
b00001010 -
b00000000 .
b110 /
#11
b00010100 $
b00000000 %
b00001010 &
b00001010 (
b00000101 )
b00010100 *
1+
#12
b00001011 #
b00001011 $
b00001001 %
b00000000 &
b00001011 '
0+
b00000001 -
b000 /
b00001011 0
#13
b00001100 #
b00001100 $
b00001010 %
b00000001 &
b00001011 (
b00010110 *
1+
b00001100 0
#14
b00001001 #
b00001101 $
b00001001 %
b00000010 &
0+
b00000010 -
b001 /
b00001001 0
#15
b00000111 #
b00001011 $
b00000111 %
b00000000 &
b00001001 (
b00000100 )
b00010010 *
1+
b00000111 0
#16
b00010010 #
b00001001 $
b00001001 %
b00001001 '
0+
b00000000 -
b011 /
b00010010 0
#17
b00100100 #
b00010010 $
b00010010 %
b00010010 '
b00010010 (
b00001001 )
b00100100 *
1+
b00100100 0
#18
b00001001 #
0+
b010 /
b00001001 0
#19
b00000100 #
b00001001 $
b00001001 %
b00001001 '
b00001001 (
b00000100 )
b00010010 *
1+
b00000100 0
#20
b00001100 #
b00001100 $
b00000110 %
b00000001 &
b00001011 '
0+
b00000011 -
b000 /
b00001100 0
#21
b00001111 #
b00001111 $
b00001001 %
b00000000 &
b00001111 '
b00001100 (
b00000110 )
b00011000 *
1+
b00001111 0
#22
b00011000 #
b00001100 $
b00001100 %
b00001100 '
0+
b00000000 -
b011 /
b00011000 0
#23
b00110000 #
b00011000 $
b00011000 %
b00011000 '
b00011000 (
b00001100 )
b00110000 *
1+
b00110000 0
